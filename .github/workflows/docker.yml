name: Docker build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  REPO: cedricvers/github-docker-artifacts-action
  
jobs:
  build-amd64:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    strategy:
      matrix:
        architecture: [amd64]
    steps:
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Checkout
        uses: actions/checkout@v3
      - uses: benjlevesque/short-sha@v2.1
        id: short-sha
        with:
          length: 7
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}
      - name: Run Buildx
        run: docker buildx build --platform linux/$(echo ${{matrix.architecture}} | tr - /) -t $REPO:arch-${{matrix.architecture}}-${{steps.short-sha.outputs.sha}} --push . 
      - name: Create new and append to manifest
        run: docker buildx imagetools create -t $REPO:${{ steps.short-sha.outputs.sha }} $REPO:arch-${{matrix.architecture}}-${{steps.short-sha.outputs.sha}}
      - name: Create new and append to manifest latest
        run: docker buildx imagetools create -t $REPO:latest $REPO:arch-${{matrix.architecture}}-${{steps.short-sha.outputs.sha}}
      - name: Run Buildx with output
        run: docker buildx build --platform linux/$(echo ${{matrix.architecture}} | tr - /) -t $REPO:arch-$(echo ${{matrix.architecture}} | tr / -)-${{steps.short-sha.outputs.sha}} --output type=tar,dest=output-${{matrix.architecture}}.tar . 
      - name: Strip binary
        run: tar -xvf output-${{matrix.architecture}}.tar && rm output-${{matrix.architecture}}.tar && tar -cvf output-${{matrix.architecture}}.tar go/bin/* && rm -rf output-${{matrix.architecture}}
      - uses: rickstaa/action-create-tag@v1
        with:
          tag: ${{ steps.short-sha.outputs.sha }}
          message: "Release ${{ steps.short-sha.outputs.sha }}"
      - name: Create a release  
        uses: ncipollo/release-action@v1
        with:
          name: ${{ steps.short-sha.outputs.sha }}
          tag: ${{ steps.short-sha.outputs.sha }}
          artifacts: "output-${{matrix.architecture}}.tar"
  build-other:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    needs: build-amd64
    strategy:
      matrix:
        architecture: [arm64, arm-v7]
    steps:
    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Checkout
      uses: actions/checkout@v3
    - uses: benjlevesque/short-sha@v2.1
      id: short-sha
      with:
        length: 7
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Available platforms
      run: echo ${{ steps.buildx.outputs.platforms }}
    - name: Run Buildx
      run: docker buildx build --platform linux/$(echo ${{matrix.architecture}} | tr - /) -t $REPO:arch-${{matrix.architecture}}-${{steps.short-sha.outputs.sha}} --push . 
    - name: Create new and append to manifest
      run: docker buildx imagetools create --append -t $REPO:${{ steps.short-sha.outputs.sha }} $REPO:arch-${{matrix.architecture}}-${{steps.short-sha.outputs.sha}}
    - name: Create new and append to manifest latest
      run: docker buildx imagetools create --append -t $REPO:latest $REPO:arch-${{matrix.architecture}}-${{steps.short-sha.outputs.sha}}
    - name: Run Buildx with output
      run: docker buildx build --platform linux/$(echo ${{matrix.architecture}} | tr - /) -t $REPO:arch-$(echo ${{matrix.architecture}} | tr / -)-${{steps.short-sha.outputs.sha}} --output type=tar,dest=output-${{matrix.architecture}}.tar . 
    - name: Strip binary
      run: tar -xvf output-${{matrix.architecture}}.tar && rm output-${{matrix.architecture}}.tar && tar -cvf output-${{matrix.architecture}}.tar go/bin/* && rm -rf output-${{matrix.architecture}}
    - name: Create a release  
      uses: ncipollo/release-action@v1
      with:
        allowUpdates: true
        name: ${{ steps.short-sha.outputs.sha }}
        tag: ${{ steps.short-sha.outputs.sha }}
        artifacts: "output-${{matrix.architecture}}.tar"
  